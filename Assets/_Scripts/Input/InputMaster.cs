//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/_Scripts/Input/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""e053d83d-8535-4868-a630-72c397b5d7c3"",
            ""actions"": [
                {
                    ""name"": ""ArrowMovement"",
                    ""type"": ""Button"",
                    ""id"": ""70892e3d-250f-4237-a502-b1321820c988"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""51f2f3c9-941f-43b6-b626-7404acbbd970"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""fc5387e7-b010-406f-85a3-2780fd031eef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventoryClick"",
                    ""type"": ""Button"",
                    ""id"": ""7fd84d31-94b6-4e68-bbde-10667712e605"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""618f08ab-7a07-40cf-a3c8-0f92bedb73d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""8b102efc-3ce3-44f2-aa6b-63c50c2f0bcb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""9dee79f0-db68-4c3e-933b-afcafc5a5a5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""3dd55fee-0310-480a-951e-d111f267683f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""7c78f711-47be-47b3-b3e1-04865a1d14a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftMouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""6a73f7fa-bf06-4d7e-ac53-fa6e2c526e46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectClick"",
                    ""type"": ""Button"",
                    ""id"": ""581d02ac-c4e3-418e-ac16-a6dbc3bbc39e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectNextCharacter"",
                    ""type"": ""Button"",
                    ""id"": ""9d5f88cd-7b60-4de9-bafd-87df0f29f18a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectPreviousCharacter"",
                    ""type"": ""Button"",
                    ""id"": ""ea3b674b-df29-4a25-be2d-2c204c9d6ea3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelEverything"",
                    ""type"": ""Button"",
                    ""id"": ""1f261bb9-2615-4413-a68d-5ce71b177671"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cheat1"",
                    ""type"": ""Button"",
                    ""id"": ""aa374c6e-812f-4485-a8d7-6d6667728253"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cheat2"",
                    ""type"": ""Button"",
                    ""id"": ""042fa219-57b1-4f92-8d4d-2c163e89d3d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""44e43fc3-222a-44bd-8b0e-66a961cf5a4c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""QButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87633496-25f8-4720-8c9c-acaa5bf5b2e0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""EButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56e8340e-13c9-40a9-9426-b65baf585e5b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""WButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74675439-f35a-4098-ac29-ae7ea8d87b19"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""RButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1157a2df-7454-43be-84e8-c17f80af27ba"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe2c0d37-b13f-4f2f-8028-26b55420ca74"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""LeftMouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d72a8822-1533-426c-be42-e739aa829a07"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""SelectClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""126036a9-efdb-47f5-9773-8dfbd5460919"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""SelectNextCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1a7ce5-3de1-4080-aadf-b80a23bcdec4"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""SelectPreviousCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3b93ea8e-603f-47d2-bc6e-9c547f0f2c1c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1b198813-666b-4d08-b856-292c6b5faed1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8c8a2681-0f38-40d4-990f-d7565f27ff40"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""162aaf32-6412-4446-9745-f0655d815476"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bb5e0e15-f0e0-4a4e-877d-3ef57e507686"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fdce7e40-3aa1-4850-9951-4235e46ea8a4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""CancelEverything"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9818ed2-e762-40ff-9499-74de2acc107e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""AButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a837ccc-7b30-462f-8d96-b9ab51ca40b8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""SButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f63c75b0-dbbd-4513-9380-8f72c451b1fe"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""OpenInventoryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a35a97c-9fb4-4c3b-8874-995b1da9764d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0a7cba6-4d94-4fd1-b6eb-3eb8598b6fee"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""QuestUI"",
            ""id"": ""3052e362-56ee-4f77-b5b7-5d5a335137f0"",
            ""actions"": [
                {
                    ""name"": ""Test"",
                    ""type"": ""Button"",
                    ""id"": ""72d3cb93-a3a7-477b-9cc4-e01878d426bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisableQuestUI"",
                    ""type"": ""Button"",
                    ""id"": ""94cab8f4-a6a5-464a-8311-c96b09f59e0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuestMovement"",
                    ""type"": ""Button"",
                    ""id"": ""a549cc41-2f19-4355-b83a-b046e5346a8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4aab5aea-1ed9-4e5b-b4b7-d4497f1d9b99"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85302d05-7c9d-43a9-ab4e-dbd71d4ebd95"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""DisableQuestUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""237c8f38-9cad-410a-8ea1-7c21fada2514"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""DisableQuestUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""402f2bf1-28c2-4a26-b4bc-5985dd44ba8f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuestMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c9b06aab-4fbe-4d7f-b0e1-511af07fd10e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""QuestMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9355ce9-afbf-43c6-83d4-8f064bb2a79b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""QuestMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3fc4ea66-a0e7-4dd2-a02b-e46c98e4cbd4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""QuestMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""572a15e9-a33a-4500-819a-1151735cc7ec"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""QuestMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""InventoryUI"",
            ""id"": ""00730d4c-f8a2-47ad-a1e4-3f601bbd57b6"",
            ""actions"": [
                {
                    ""name"": ""Test"",
                    ""type"": ""Button"",
                    ""id"": ""a6df8010-b323-4296-a372-4c30ba82bf15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisableInventoryUI"",
                    ""type"": ""Button"",
                    ""id"": ""bd0e9c66-9512-4acf-850c-45c59ce61d5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InventoryMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e49492d9-ebe1-42f9-baca-c623ebbd984d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""f4729054-ee0d-45d5-b707-190f172005dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ba5e1909-cd3c-45b0-a068-18685bd5cfa2"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a80e7dae-7a49-4b08-9de5-b913f6bed235"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""DisableInventoryUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e250808-275d-4b51-bcb2-0fcf67eefa67"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""DisableInventoryUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""eba39aeb-b2c9-4622-9097-478a7ceea26e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1d6498ab-247c-47d4-a64a-4a6408675c23"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""InventoryMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c0c6b8d-94f5-4158-bb79-93c8003aef53"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""InventoryMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c31b0189-e25d-4f10-90de-8abd87322d31"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""InventoryMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""57a384e3-eeee-4864-8500-5ef31a3bd189"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""InventoryMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bcb85bb5-63d7-470d-a236-63bc614fc575"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Conversation"",
            ""id"": ""bba1ee92-5585-4d47-9802-db9688f45a02"",
            ""actions"": [
                {
                    ""name"": ""ConversationInteract"",
                    ""type"": ""Button"",
                    ""id"": ""727d1062-3fd9-402e-9e81-4c31dc72bd7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9c5db3cf-8bfe-4a22-831e-58d59fc773aa"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ConversationInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46ba40a9-8ea7-49d9-9032-580a98968c6e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ConversationInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Journey"",
            ""id"": ""5d652576-3d48-449c-b167-69231d3745f7"",
            ""actions"": [
                {
                    ""name"": ""ArrowMovement"",
                    ""type"": ""Button"",
                    ""id"": ""feda9b30-cead-44fe-a8e9-7657a039d199"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3ea75a7b-e115-4e82-b724-ddd05dbf5132"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a3de26a8-fc58-4c93-8238-7a7a80b48318"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a7238d0-75eb-4bf4-8b9b-cea5714e9f1c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4019f775-cc69-414f-95a3-263f28692435"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aa961ebb-3da1-4bf1-b926-a5690c396496"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ArrowMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_ArrowMovement = m_Player.FindAction("ArrowMovement", throwIfNotFound: true);
        m_Player_AButtonClick = m_Player.FindAction("AButtonClick", throwIfNotFound: true);
        m_Player_SButtonClick = m_Player.FindAction("SButtonClick", throwIfNotFound: true);
        m_Player_OpenInventoryClick = m_Player.FindAction("OpenInventoryClick", throwIfNotFound: true);
        m_Player_QButtonClick = m_Player.FindAction("QButtonClick", throwIfNotFound: true);
        m_Player_WButtonClick = m_Player.FindAction("WButtonClick", throwIfNotFound: true);
        m_Player_EButtonClick = m_Player.FindAction("EButtonClick", throwIfNotFound: true);
        m_Player_RButtonClick = m_Player.FindAction("RButtonClick", throwIfNotFound: true);
        m_Player_Back = m_Player.FindAction("Back", throwIfNotFound: true);
        m_Player_LeftMouseClick = m_Player.FindAction("LeftMouseClick", throwIfNotFound: true);
        m_Player_SelectClick = m_Player.FindAction("SelectClick", throwIfNotFound: true);
        m_Player_SelectNextCharacter = m_Player.FindAction("SelectNextCharacter", throwIfNotFound: true);
        m_Player_SelectPreviousCharacter = m_Player.FindAction("SelectPreviousCharacter", throwIfNotFound: true);
        m_Player_CancelEverything = m_Player.FindAction("CancelEverything", throwIfNotFound: true);
        m_Player_Cheat1 = m_Player.FindAction("Cheat1", throwIfNotFound: true);
        m_Player_Cheat2 = m_Player.FindAction("Cheat2", throwIfNotFound: true);
        // QuestUI
        m_QuestUI = asset.FindActionMap("QuestUI", throwIfNotFound: true);
        m_QuestUI_Test = m_QuestUI.FindAction("Test", throwIfNotFound: true);
        m_QuestUI_DisableQuestUI = m_QuestUI.FindAction("DisableQuestUI", throwIfNotFound: true);
        m_QuestUI_QuestMovement = m_QuestUI.FindAction("QuestMovement", throwIfNotFound: true);
        // InventoryUI
        m_InventoryUI = asset.FindActionMap("InventoryUI", throwIfNotFound: true);
        m_InventoryUI_Test = m_InventoryUI.FindAction("Test", throwIfNotFound: true);
        m_InventoryUI_DisableInventoryUI = m_InventoryUI.FindAction("DisableInventoryUI", throwIfNotFound: true);
        m_InventoryUI_InventoryMovement = m_InventoryUI.FindAction("InventoryMovement", throwIfNotFound: true);
        m_InventoryUI_UseItem = m_InventoryUI.FindAction("UseItem", throwIfNotFound: true);
        // Conversation
        m_Conversation = asset.FindActionMap("Conversation", throwIfNotFound: true);
        m_Conversation_ConversationInteract = m_Conversation.FindAction("ConversationInteract", throwIfNotFound: true);
        // Journey
        m_Journey = asset.FindActionMap("Journey", throwIfNotFound: true);
        m_Journey_ArrowMovement = m_Journey.FindAction("ArrowMovement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_ArrowMovement;
    private readonly InputAction m_Player_AButtonClick;
    private readonly InputAction m_Player_SButtonClick;
    private readonly InputAction m_Player_OpenInventoryClick;
    private readonly InputAction m_Player_QButtonClick;
    private readonly InputAction m_Player_WButtonClick;
    private readonly InputAction m_Player_EButtonClick;
    private readonly InputAction m_Player_RButtonClick;
    private readonly InputAction m_Player_Back;
    private readonly InputAction m_Player_LeftMouseClick;
    private readonly InputAction m_Player_SelectClick;
    private readonly InputAction m_Player_SelectNextCharacter;
    private readonly InputAction m_Player_SelectPreviousCharacter;
    private readonly InputAction m_Player_CancelEverything;
    private readonly InputAction m_Player_Cheat1;
    private readonly InputAction m_Player_Cheat2;
    public struct PlayerActions
    {
        private @InputMaster m_Wrapper;
        public PlayerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ArrowMovement => m_Wrapper.m_Player_ArrowMovement;
        public InputAction @AButtonClick => m_Wrapper.m_Player_AButtonClick;
        public InputAction @SButtonClick => m_Wrapper.m_Player_SButtonClick;
        public InputAction @OpenInventoryClick => m_Wrapper.m_Player_OpenInventoryClick;
        public InputAction @QButtonClick => m_Wrapper.m_Player_QButtonClick;
        public InputAction @WButtonClick => m_Wrapper.m_Player_WButtonClick;
        public InputAction @EButtonClick => m_Wrapper.m_Player_EButtonClick;
        public InputAction @RButtonClick => m_Wrapper.m_Player_RButtonClick;
        public InputAction @Back => m_Wrapper.m_Player_Back;
        public InputAction @LeftMouseClick => m_Wrapper.m_Player_LeftMouseClick;
        public InputAction @SelectClick => m_Wrapper.m_Player_SelectClick;
        public InputAction @SelectNextCharacter => m_Wrapper.m_Player_SelectNextCharacter;
        public InputAction @SelectPreviousCharacter => m_Wrapper.m_Player_SelectPreviousCharacter;
        public InputAction @CancelEverything => m_Wrapper.m_Player_CancelEverything;
        public InputAction @Cheat1 => m_Wrapper.m_Player_Cheat1;
        public InputAction @Cheat2 => m_Wrapper.m_Player_Cheat2;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @ArrowMovement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowMovement;
                @ArrowMovement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowMovement;
                @ArrowMovement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnArrowMovement;
                @AButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButtonClick;
                @AButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButtonClick;
                @AButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAButtonClick;
                @SButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSButtonClick;
                @SButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSButtonClick;
                @SButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSButtonClick;
                @OpenInventoryClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryClick;
                @OpenInventoryClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryClick;
                @OpenInventoryClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryClick;
                @QButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQButtonClick;
                @QButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQButtonClick;
                @QButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQButtonClick;
                @WButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWButtonClick;
                @WButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWButtonClick;
                @WButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWButtonClick;
                @EButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEButtonClick;
                @EButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEButtonClick;
                @EButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEButtonClick;
                @RButtonClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRButtonClick;
                @RButtonClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRButtonClick;
                @RButtonClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRButtonClick;
                @Back.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBack;
                @LeftMouseClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftMouseClick;
                @LeftMouseClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftMouseClick;
                @LeftMouseClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftMouseClick;
                @SelectClick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectClick;
                @SelectClick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectClick;
                @SelectClick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectClick;
                @SelectNextCharacter.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectNextCharacter;
                @SelectNextCharacter.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectNextCharacter;
                @SelectNextCharacter.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectNextCharacter;
                @SelectPreviousCharacter.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectPreviousCharacter;
                @SelectPreviousCharacter.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectPreviousCharacter;
                @SelectPreviousCharacter.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSelectPreviousCharacter;
                @CancelEverything.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelEverything;
                @CancelEverything.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelEverything;
                @CancelEverything.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancelEverything;
                @Cheat1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat1;
                @Cheat1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat1;
                @Cheat1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat1;
                @Cheat2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat2;
                @Cheat2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat2;
                @Cheat2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCheat2;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ArrowMovement.started += instance.OnArrowMovement;
                @ArrowMovement.performed += instance.OnArrowMovement;
                @ArrowMovement.canceled += instance.OnArrowMovement;
                @AButtonClick.started += instance.OnAButtonClick;
                @AButtonClick.performed += instance.OnAButtonClick;
                @AButtonClick.canceled += instance.OnAButtonClick;
                @SButtonClick.started += instance.OnSButtonClick;
                @SButtonClick.performed += instance.OnSButtonClick;
                @SButtonClick.canceled += instance.OnSButtonClick;
                @OpenInventoryClick.started += instance.OnOpenInventoryClick;
                @OpenInventoryClick.performed += instance.OnOpenInventoryClick;
                @OpenInventoryClick.canceled += instance.OnOpenInventoryClick;
                @QButtonClick.started += instance.OnQButtonClick;
                @QButtonClick.performed += instance.OnQButtonClick;
                @QButtonClick.canceled += instance.OnQButtonClick;
                @WButtonClick.started += instance.OnWButtonClick;
                @WButtonClick.performed += instance.OnWButtonClick;
                @WButtonClick.canceled += instance.OnWButtonClick;
                @EButtonClick.started += instance.OnEButtonClick;
                @EButtonClick.performed += instance.OnEButtonClick;
                @EButtonClick.canceled += instance.OnEButtonClick;
                @RButtonClick.started += instance.OnRButtonClick;
                @RButtonClick.performed += instance.OnRButtonClick;
                @RButtonClick.canceled += instance.OnRButtonClick;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @LeftMouseClick.started += instance.OnLeftMouseClick;
                @LeftMouseClick.performed += instance.OnLeftMouseClick;
                @LeftMouseClick.canceled += instance.OnLeftMouseClick;
                @SelectClick.started += instance.OnSelectClick;
                @SelectClick.performed += instance.OnSelectClick;
                @SelectClick.canceled += instance.OnSelectClick;
                @SelectNextCharacter.started += instance.OnSelectNextCharacter;
                @SelectNextCharacter.performed += instance.OnSelectNextCharacter;
                @SelectNextCharacter.canceled += instance.OnSelectNextCharacter;
                @SelectPreviousCharacter.started += instance.OnSelectPreviousCharacter;
                @SelectPreviousCharacter.performed += instance.OnSelectPreviousCharacter;
                @SelectPreviousCharacter.canceled += instance.OnSelectPreviousCharacter;
                @CancelEverything.started += instance.OnCancelEverything;
                @CancelEverything.performed += instance.OnCancelEverything;
                @CancelEverything.canceled += instance.OnCancelEverything;
                @Cheat1.started += instance.OnCheat1;
                @Cheat1.performed += instance.OnCheat1;
                @Cheat1.canceled += instance.OnCheat1;
                @Cheat2.started += instance.OnCheat2;
                @Cheat2.performed += instance.OnCheat2;
                @Cheat2.canceled += instance.OnCheat2;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // QuestUI
    private readonly InputActionMap m_QuestUI;
    private IQuestUIActions m_QuestUIActionsCallbackInterface;
    private readonly InputAction m_QuestUI_Test;
    private readonly InputAction m_QuestUI_DisableQuestUI;
    private readonly InputAction m_QuestUI_QuestMovement;
    public struct QuestUIActions
    {
        private @InputMaster m_Wrapper;
        public QuestUIActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Test => m_Wrapper.m_QuestUI_Test;
        public InputAction @DisableQuestUI => m_Wrapper.m_QuestUI_DisableQuestUI;
        public InputAction @QuestMovement => m_Wrapper.m_QuestUI_QuestMovement;
        public InputActionMap Get() { return m_Wrapper.m_QuestUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuestUIActions set) { return set.Get(); }
        public void SetCallbacks(IQuestUIActions instance)
        {
            if (m_Wrapper.m_QuestUIActionsCallbackInterface != null)
            {
                @Test.started -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnTest;
                @Test.performed -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnTest;
                @Test.canceled -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnTest;
                @DisableQuestUI.started -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnDisableQuestUI;
                @DisableQuestUI.performed -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnDisableQuestUI;
                @DisableQuestUI.canceled -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnDisableQuestUI;
                @QuestMovement.started -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnQuestMovement;
                @QuestMovement.performed -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnQuestMovement;
                @QuestMovement.canceled -= m_Wrapper.m_QuestUIActionsCallbackInterface.OnQuestMovement;
            }
            m_Wrapper.m_QuestUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Test.started += instance.OnTest;
                @Test.performed += instance.OnTest;
                @Test.canceled += instance.OnTest;
                @DisableQuestUI.started += instance.OnDisableQuestUI;
                @DisableQuestUI.performed += instance.OnDisableQuestUI;
                @DisableQuestUI.canceled += instance.OnDisableQuestUI;
                @QuestMovement.started += instance.OnQuestMovement;
                @QuestMovement.performed += instance.OnQuestMovement;
                @QuestMovement.canceled += instance.OnQuestMovement;
            }
        }
    }
    public QuestUIActions @QuestUI => new QuestUIActions(this);

    // InventoryUI
    private readonly InputActionMap m_InventoryUI;
    private IInventoryUIActions m_InventoryUIActionsCallbackInterface;
    private readonly InputAction m_InventoryUI_Test;
    private readonly InputAction m_InventoryUI_DisableInventoryUI;
    private readonly InputAction m_InventoryUI_InventoryMovement;
    private readonly InputAction m_InventoryUI_UseItem;
    public struct InventoryUIActions
    {
        private @InputMaster m_Wrapper;
        public InventoryUIActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Test => m_Wrapper.m_InventoryUI_Test;
        public InputAction @DisableInventoryUI => m_Wrapper.m_InventoryUI_DisableInventoryUI;
        public InputAction @InventoryMovement => m_Wrapper.m_InventoryUI_InventoryMovement;
        public InputAction @UseItem => m_Wrapper.m_InventoryUI_UseItem;
        public InputActionMap Get() { return m_Wrapper.m_InventoryUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryUIActions set) { return set.Get(); }
        public void SetCallbacks(IInventoryUIActions instance)
        {
            if (m_Wrapper.m_InventoryUIActionsCallbackInterface != null)
            {
                @Test.started -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnTest;
                @Test.performed -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnTest;
                @Test.canceled -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnTest;
                @DisableInventoryUI.started -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnDisableInventoryUI;
                @DisableInventoryUI.performed -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnDisableInventoryUI;
                @DisableInventoryUI.canceled -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnDisableInventoryUI;
                @InventoryMovement.started -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnInventoryMovement;
                @InventoryMovement.performed -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnInventoryMovement;
                @InventoryMovement.canceled -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnInventoryMovement;
                @UseItem.started -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnUseItem;
                @UseItem.performed -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnUseItem;
                @UseItem.canceled -= m_Wrapper.m_InventoryUIActionsCallbackInterface.OnUseItem;
            }
            m_Wrapper.m_InventoryUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Test.started += instance.OnTest;
                @Test.performed += instance.OnTest;
                @Test.canceled += instance.OnTest;
                @DisableInventoryUI.started += instance.OnDisableInventoryUI;
                @DisableInventoryUI.performed += instance.OnDisableInventoryUI;
                @DisableInventoryUI.canceled += instance.OnDisableInventoryUI;
                @InventoryMovement.started += instance.OnInventoryMovement;
                @InventoryMovement.performed += instance.OnInventoryMovement;
                @InventoryMovement.canceled += instance.OnInventoryMovement;
                @UseItem.started += instance.OnUseItem;
                @UseItem.performed += instance.OnUseItem;
                @UseItem.canceled += instance.OnUseItem;
            }
        }
    }
    public InventoryUIActions @InventoryUI => new InventoryUIActions(this);

    // Conversation
    private readonly InputActionMap m_Conversation;
    private IConversationActions m_ConversationActionsCallbackInterface;
    private readonly InputAction m_Conversation_ConversationInteract;
    public struct ConversationActions
    {
        private @InputMaster m_Wrapper;
        public ConversationActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ConversationInteract => m_Wrapper.m_Conversation_ConversationInteract;
        public InputActionMap Get() { return m_Wrapper.m_Conversation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ConversationActions set) { return set.Get(); }
        public void SetCallbacks(IConversationActions instance)
        {
            if (m_Wrapper.m_ConversationActionsCallbackInterface != null)
            {
                @ConversationInteract.started -= m_Wrapper.m_ConversationActionsCallbackInterface.OnConversationInteract;
                @ConversationInteract.performed -= m_Wrapper.m_ConversationActionsCallbackInterface.OnConversationInteract;
                @ConversationInteract.canceled -= m_Wrapper.m_ConversationActionsCallbackInterface.OnConversationInteract;
            }
            m_Wrapper.m_ConversationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ConversationInteract.started += instance.OnConversationInteract;
                @ConversationInteract.performed += instance.OnConversationInteract;
                @ConversationInteract.canceled += instance.OnConversationInteract;
            }
        }
    }
    public ConversationActions @Conversation => new ConversationActions(this);

    // Journey
    private readonly InputActionMap m_Journey;
    private IJourneyActions m_JourneyActionsCallbackInterface;
    private readonly InputAction m_Journey_ArrowMovement;
    public struct JourneyActions
    {
        private @InputMaster m_Wrapper;
        public JourneyActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ArrowMovement => m_Wrapper.m_Journey_ArrowMovement;
        public InputActionMap Get() { return m_Wrapper.m_Journey; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JourneyActions set) { return set.Get(); }
        public void SetCallbacks(IJourneyActions instance)
        {
            if (m_Wrapper.m_JourneyActionsCallbackInterface != null)
            {
                @ArrowMovement.started -= m_Wrapper.m_JourneyActionsCallbackInterface.OnArrowMovement;
                @ArrowMovement.performed -= m_Wrapper.m_JourneyActionsCallbackInterface.OnArrowMovement;
                @ArrowMovement.canceled -= m_Wrapper.m_JourneyActionsCallbackInterface.OnArrowMovement;
            }
            m_Wrapper.m_JourneyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ArrowMovement.started += instance.OnArrowMovement;
                @ArrowMovement.performed += instance.OnArrowMovement;
                @ArrowMovement.canceled += instance.OnArrowMovement;
            }
        }
    }
    public JourneyActions @Journey => new JourneyActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnArrowMovement(InputAction.CallbackContext context);
        void OnAButtonClick(InputAction.CallbackContext context);
        void OnSButtonClick(InputAction.CallbackContext context);
        void OnOpenInventoryClick(InputAction.CallbackContext context);
        void OnQButtonClick(InputAction.CallbackContext context);
        void OnWButtonClick(InputAction.CallbackContext context);
        void OnEButtonClick(InputAction.CallbackContext context);
        void OnRButtonClick(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnLeftMouseClick(InputAction.CallbackContext context);
        void OnSelectClick(InputAction.CallbackContext context);
        void OnSelectNextCharacter(InputAction.CallbackContext context);
        void OnSelectPreviousCharacter(InputAction.CallbackContext context);
        void OnCancelEverything(InputAction.CallbackContext context);
        void OnCheat1(InputAction.CallbackContext context);
        void OnCheat2(InputAction.CallbackContext context);
    }
    public interface IQuestUIActions
    {
        void OnTest(InputAction.CallbackContext context);
        void OnDisableQuestUI(InputAction.CallbackContext context);
        void OnQuestMovement(InputAction.CallbackContext context);
    }
    public interface IInventoryUIActions
    {
        void OnTest(InputAction.CallbackContext context);
        void OnDisableInventoryUI(InputAction.CallbackContext context);
        void OnInventoryMovement(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
    }
    public interface IConversationActions
    {
        void OnConversationInteract(InputAction.CallbackContext context);
    }
    public interface IJourneyActions
    {
        void OnArrowMovement(InputAction.CallbackContext context);
    }
}
